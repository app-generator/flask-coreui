{"version":3,"sources":["../../src/scss/examples.scss","examples.css","../../node_modules/@coreui/coreui/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAAA,yKAAA;AAME;EACE,kBAAA;ACJJ;ADOE;EACE,oCAAA;ACLJ;ADOa;EACP,qDAAA;ACLN;;ADSE;;EAEE,8BAAA;ACNJ;ADSE;;EAEE,uBAAA;ACPJ;ADUE;EACE,kBAAA;ACRJ;ADaI;EACE,gBAAA;ACXN;ADeM;EACE,kBAAA;ACbR;ADiBI;;;;EAIE,gBAAA;ACfN;ADkBI;EACE,gBAAA;EACA,cAAA;AChBN;ADmBI;EACE,gBAAA;ACjBN;ADqBI;;EAEE,mBAAA;ACnBN;ADuBI;;EAEE,wBAAA;ACrBN;ADuBI;EACE,kBAAA;ACrBN;ADyBI;EACE,gBAAA;ACvBN;AD0BI;EACE,eAAA;ACxBN;AD4BI;;EAEE,gBAAA;EACA,wBAAA;AC1BN;AD6BI;EACE,gBAAA;EACA,wBAAA;AC3BN;ACUI;EFqBE;;IAEE,4BAAA;EC5BN;ED8BI;IACE,4BAAA;EC5BN;AACF;ADgCI;EACE,kBAAA;EACA,qBAAA;AC9BN;;ADmCA;EAgBE,gBAAA;EAaA,gBAAA;AC3DF;AD+BE;;EAEE,6EAAA;EACA,qBAAA;EAAA,aAAA;EACA,gBAAA;EACA,cAAA;EACA,gBAAA;EACA,qCAAA;EACA,kBAAA;EACA,oBAAA;EACA,gBAAA;EAAA,cAAA;EAAA,WAAA;EACA,gBAAA;EACA,cAAA;AC7BJ;ADiCE;EACE,YAAA;EACA,eAAA;EACA,cAAA;EACA,oBAAA;AC/BJ;ADkCE;;EAEE,uBAAA;AChCJ;ADoCE;EACE,cAAA;EACA,oBAAA;AClCJ;ADqCE;;;;EAIE,cAAA;ACnCJ;ADsCE;EACE,cAAA;ACpCJ;ADuCE;EACE,YAAA;ACrCJ;ADwCE;;;EAGE,cAAA;ACtCJ;ADyCE;EACE,cAAA;EACA,0BAAA;ACvCJ;AD0CE;;EAEE,WAAA;ACxCJ;AD2CE;;EAEE,cAAA;ACzCJ;AD4CE;EACE,cAAA;AC1CJ;AD6CE;;;;;;EAME,cAAA;AC3CJ;AD8CE;EACE,cAAA;AC5CJ;AD+CE;EACE,cAAA;AC7CJ;ADgDE;EACE,cAAA;EACA,YAAA;AC9CJ;ADiDE;EACE,cAAA;AC/CJ;ADkDE;;EAEE,cAAA;AChDJ;ADmDE;;EAEE,cAAA;ACjDJ;ADoDE;EACE,cAAA;AClDJ;ADqDE;EACE,cAAA;ACnDJ;ADsDE;EACE,cAAA;ACpDJ;ADuDE;;EAEE,iBAAA;ACrDJ;ADwDE;EACE,kBAAA;ACtDJ","file":"examples.css","sourcesContent":["/* stylelint-disable declaration-no-important, font-weight-notation, selector-no-qualifying-type, property-disallowed-list, scss/selector-no-redundant-nesting-selector */\n@import \"@coreui/coreui/scss/functions\";\n@import \"@coreui/coreui/scss/variables\";\n@import \"@coreui/coreui/scss/mixins\";\n\n.example {\n  &:not(:first-child) {\n    margin-top: 1.5rem;\n  }\n\n  .tab-content {\n    background-color: $light-50 !important;\n\n    @at-root .dark-theme & {\n      background-color: rgba(255, 255, 255, .1) !important;\n    }\n  }\n\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    font-size: .875rem !important;\n  }\n\n  :not(pre) > code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    background: transparent;\n  }\n\n  & + p {\n    margin-top: 1.5rem;\n  }\n\n  // Components examples\n  .preview {\n    + p {\n      margin-top: 2rem;\n    }\n\n    > .form-control {\n      + .form-control {\n        margin-top: .5rem;\n      }\n    }\n\n    > .nav + .nav,\n    > .alert + .alert,\n    > .navbar + .navbar,\n    > .progress + .progress {\n      margin-top: 1rem;\n    }\n\n    > .dropdown-menu {\n      position: static;\n      display: block;\n    }\n\n    > :last-child {\n      margin-bottom: 0;\n    }\n\n    // Images\n    > svg + svg,\n    > img + img {\n      margin-left: .5rem;\n    }\n\n    // Buttons\n    > .btn,\n    > .btn-group {\n      margin: .25rem .125rem;\n    }\n    > .btn-toolbar + .btn-toolbar {\n      margin-top: .5rem;\n    }\n\n    // List groups\n    > .list-group {\n      max-width: 400px;\n    }\n\n    > [class*=\"list-group-horizontal\"] {\n      max-width: 100%;\n    }\n\n    // Navbars\n    .fixed-top,\n    .sticky-top {\n      position: static;\n      margin: -1rem -1rem 1rem;\n    }\n\n    .fixed-bottom {\n      position: static;\n      margin: 1rem -1rem -1rem;\n    }\n\n    @include media-breakpoint-up(sm) {\n      .fixed-top,\n      .sticky-top {\n        margin: -1.5rem -1.5rem 1rem;\n      }\n      .fixed-bottom {\n        margin: 1rem -1.5rem -1.5rem;\n      }\n    }\n\n    // Pagination\n    .pagination {\n      margin-top: .5rem;\n      margin-bottom: .5rem;\n    }\n  }\n}\n\n.dark-theme {\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    font-family: Inconsolata, Monaco, Consolas, \"Courier New\", Courier, monospace;\n    hyphens: none;\n    line-height: 1.5;\n    color: #c5c8c6;\n    text-align: left;\n    text-shadow: 0 1px rgba(0, 0, 0, .3);\n    word-break: normal;\n    word-spacing: normal;\n    tab-size: 4;\n    white-space: pre;\n    direction: ltr;\n  }\n\n  /* Code blocks */\n  pre[class*=\"language-\"] {\n    padding: 1em;\n    margin: .5em 0;\n    overflow: auto;\n    border-radius: .3em;\n  }\n\n  :not(pre) > code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    background: transparent;\n  }\n\n  /* Inline code */\n  :not(pre) > code[class*=\"language-\"] {\n    padding: .1em;\n    border-radius: .3em;\n  }\n\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: #7c7c7c;\n  }\n\n  .token.punctuation {\n    color: #c5c8c6;\n  }\n\n  .namespace {\n    opacity: .7;\n  }\n\n  .token.property,\n  .token.keyword,\n  .token.tag {\n    color: #96cbfe;\n  }\n\n  .token.class-name {\n    color: #ffffb6;\n    text-decoration: underline;\n  }\n\n  .token.boolean,\n  .token.constant {\n    color: #9c9;\n  }\n\n  .token.symbol,\n  .token.deleted {\n    color: #f92672;\n  }\n\n  .token.number {\n    color: #ff73fd;\n  }\n\n  .token.selector,\n  .token.attr-name,\n  .token.string,\n  .token.char,\n  .token.builtin,\n  .token.inserted {\n    color: #a8ff60;\n  }\n\n  .token.variable {\n    color: #c6c5fe;\n  }\n\n  .token.operator {\n    color: #ededed;\n  }\n\n  .token.entity {\n    color: #ffffb6;\n    cursor: help;\n  }\n\n  .token.url {\n    color: #96cbfe;\n  }\n\n  .language-css .token.string,\n  .style .token.string {\n    color: #87c38a;\n  }\n\n  .token.atrule,\n  .token.attr-value {\n    color: #f9ee98;\n  }\n\n  .token.function {\n    color: #dad085;\n  }\n\n  .token.regex {\n    color: #e9c062;\n  }\n\n  .token.important {\n    color: #fd971f;\n  }\n\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n\n  .token.italic {\n    font-style: italic;\n  }\n}\n","/* stylelint-disable declaration-no-important, font-weight-notation, selector-no-qualifying-type, property-disallowed-list, scss/selector-no-redundant-nesting-selector */\n.example:not(:first-child) {\n  margin-top: 1.5rem;\n}\n.example .tab-content {\n  background-color: #f9fafa !important;\n}\n.dark-theme .example .tab-content {\n  background-color: rgba(255, 255, 255, 0.1) !important;\n}\n\n.example code[class*=language-],\n.example pre[class*=language-] {\n  font-size: 0.875rem !important;\n}\n.example :not(pre) > code[class*=language-],\n.example pre[class*=language-] {\n  background: transparent;\n}\n.example + p {\n  margin-top: 1.5rem;\n}\n.example .preview + p {\n  margin-top: 2rem;\n}\n.example .preview > .form-control + .form-control {\n  margin-top: 0.5rem;\n}\n.example .preview > .nav + .nav,\n.example .preview > .alert + .alert,\n.example .preview > .navbar + .navbar,\n.example .preview > .progress + .progress {\n  margin-top: 1rem;\n}\n.example .preview > .dropdown-menu {\n  position: static;\n  display: block;\n}\n.example .preview > :last-child {\n  margin-bottom: 0;\n}\n.example .preview > svg + svg,\n.example .preview > img + img {\n  margin-left: 0.5rem;\n}\n.example .preview > .btn,\n.example .preview > .btn-group {\n  margin: 0.25rem 0.125rem;\n}\n.example .preview > .btn-toolbar + .btn-toolbar {\n  margin-top: 0.5rem;\n}\n.example .preview > .list-group {\n  max-width: 400px;\n}\n.example .preview > [class*=list-group-horizontal] {\n  max-width: 100%;\n}\n.example .preview .fixed-top,\n.example .preview .sticky-top {\n  position: static;\n  margin: -1rem -1rem 1rem;\n}\n.example .preview .fixed-bottom {\n  position: static;\n  margin: 1rem -1rem -1rem;\n}\n@media (min-width: 576px) {\n  .example .preview .fixed-top,\n.example .preview .sticky-top {\n    margin: -1.5rem -1.5rem 1rem;\n  }\n  .example .preview .fixed-bottom {\n    margin: 1rem -1.5rem -1.5rem;\n  }\n}\n.example .preview .pagination {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.dark-theme {\n  /* Code blocks */\n  /* Inline code */\n}\n.dark-theme code[class*=language-],\n.dark-theme pre[class*=language-] {\n  font-family: Inconsolata, Monaco, Consolas, \"Courier New\", Courier, monospace;\n  hyphens: none;\n  line-height: 1.5;\n  color: #c5c8c6;\n  text-align: left;\n  text-shadow: 0 1px rgba(0, 0, 0, 0.3);\n  word-break: normal;\n  word-spacing: normal;\n  tab-size: 4;\n  white-space: pre;\n  direction: ltr;\n}\n.dark-theme pre[class*=language-] {\n  padding: 1em;\n  margin: 0.5em 0;\n  overflow: auto;\n  border-radius: 0.3em;\n}\n.dark-theme :not(pre) > code[class*=language-],\n.dark-theme pre[class*=language-] {\n  background: transparent;\n}\n.dark-theme :not(pre) > code[class*=language-] {\n  padding: 0.1em;\n  border-radius: 0.3em;\n}\n.dark-theme .token.comment,\n.dark-theme .token.prolog,\n.dark-theme .token.doctype,\n.dark-theme .token.cdata {\n  color: #7c7c7c;\n}\n.dark-theme .token.punctuation {\n  color: #c5c8c6;\n}\n.dark-theme .namespace {\n  opacity: 0.7;\n}\n.dark-theme .token.property,\n.dark-theme .token.keyword,\n.dark-theme .token.tag {\n  color: #96cbfe;\n}\n.dark-theme .token.class-name {\n  color: #ffffb6;\n  text-decoration: underline;\n}\n.dark-theme .token.boolean,\n.dark-theme .token.constant {\n  color: #9c9;\n}\n.dark-theme .token.symbol,\n.dark-theme .token.deleted {\n  color: #f92672;\n}\n.dark-theme .token.number {\n  color: #ff73fd;\n}\n.dark-theme .token.selector,\n.dark-theme .token.attr-name,\n.dark-theme .token.string,\n.dark-theme .token.char,\n.dark-theme .token.builtin,\n.dark-theme .token.inserted {\n  color: #a8ff60;\n}\n.dark-theme .token.variable {\n  color: #c6c5fe;\n}\n.dark-theme .token.operator {\n  color: #ededed;\n}\n.dark-theme .token.entity {\n  color: #ffffb6;\n  cursor: help;\n}\n.dark-theme .token.url {\n  color: #96cbfe;\n}\n.dark-theme .language-css .token.string,\n.dark-theme .style .token.string {\n  color: #87c38a;\n}\n.dark-theme .token.atrule,\n.dark-theme .token.attr-value {\n  color: #f9ee98;\n}\n.dark-theme .token.function {\n  color: #dad085;\n}\n.dark-theme .token.regex {\n  color: #e9c062;\n}\n.dark-theme .token.important {\n  color: #fd971f;\n}\n.dark-theme .token.important,\n.dark-theme .token.bold {\n  font-weight: bold;\n}\n.dark-theme .token.italic {\n  font-style: italic;\n}\n\n/*# sourceMappingURL=examples.css.map */\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Name of the previous breakpoint, or null for the first breakpoint.\n//\n//    >> breakpoint-before(lg)\n//    md\n//    >> breakpoint-next(lg, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(lg, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-before($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n - 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}